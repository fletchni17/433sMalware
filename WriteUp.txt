Text Write Up

Running it:

apt-get install libssl-dev
gcc Main.c -L/usr/lib -lssl -lcrypto -o main

Sources:

1) A Key-Management-Based Taxonomy for Ransomware


Notes for each of the main parts involved are below.


-------------------------------Obfuscation------------------------------------------------------------





------------------------------File Traversal----------------------------------------------------------

For right now, the plan for the malware is to attack files located in the running malware's current working
directory and stay at that depth(ie not recursively searching sub-directories). It wouldn't be hard to implement
that, but it seems unnecessary for the demo and might affect runtime.

As a safeguard against the malware going rogue on accident and encrypting important files on our computers
while testing, the malware will only encrypt a file if it has the keyword "malwareExample" in the file name.

--------------------------------Encryption------------------------------------------------------------
In source (1), a popular way that ransomwares use keys without exposing them to the client is detailed:

"This basic hybrid (symmetric+asymmetric) key model
 works in the following steps:
 1) Ransomware compromises host and commences execution.
 2) Cryptographic APIs available on the host are used to
 generate an encryption key such as an AES-256 key.
 3) Ransomware encrypts this symmetric key with a
 hard-coded asymmetric key (e.g. RSA-2048) and communicates a copy of the now encrypted symmetric key
 to the attacker.
 4) User data is encrypted using the symmetric key.
 5) Ransomware securely destroys the symmetric key on
 the host machine, now making the attacker the sole
 possessor of the decryption key.
 6) A ransom note is displayed to the user while ransomware awaits payment."


Generating public private pair:
openssl genrsa -out private.pem


---------------------------------Spreading---------------------------------------------------------------